<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright 2014, 2015 Eric Smith -->

<image>

  <segment name="object_table_directory" type="object_table_data_segment" object_table="object_table_directory" reserve="32"/>

  <segment name="processor_table" type="object_table_data_segment" seg_index="1"/>

  <segment name="processor_1_object_table" type="object_table_data_segment"/>

  <segment name="dispatch_port_object_table" type="object_table_data_segment"/>

  <segment name="system_object_table" type="object_table_data_segment"/>

  <segment name="process_1_object_table" type="object_table_data_segment"/>

  <segment name="null_program_object_table" type="object_table_data_segment"/>

  <segment name="program_1_object_table" type="object_table_data_segment"/>

  <segment name="dynamic_object_table" type="object_table_data_segment" reserve="100"/>

  <segment name="global_sro_data_segment" type="storage_resource_data_segment" object_table="system_object_table">
    <field name="beginning_block_index" value="1"/>
    <field name="current_block_index" value="1"/>
    <field name="storage_block_descriptor_area">
      <field type="storage_block_descriptor">
	<field name="base_address" value="0x008000"/>  <!-- XXX assume under 32 KiB of static objects -->
	<field name="end_address"  value="0x010000"/>  <!-- allow for 32 KiB of dynamic objects -->
	<field name="last_block"   value="true"/>
	<field name="dirty"        value="false"/>     <!-- XXX assume memory was initialized to zero -->
      </field>
    </field>
  </segment>

  <segment name="global_sro_access_segment" type="storage_resource_access_segment" object_table="system_object_table">
    <ad index="storage_resource_data_segment" segment="global_sro_data_segment"/>
    <ad index="object_table_data_segment"     segment="dynamic_object_table"/>
  </segment>

  <segment name="global_communication_data_segment" type="communication_data_segment" object_table="system_object_table">
    <field name="processor_count" value="1"/>
  </segment>

  <segment name="normal_dispatch_port_data_segment" type="port_data_segment" object_table="dispatch_port_object_table">
    <field name="head_free_buffer" value="24"/>
    <field name="head_message_in_buffer" value="16"/>
    <field name="tail_message_in_buffer" value="16"/>
    <field name="port_message_queue">
      <!-- in use -->
      <field type="port_message_queue_entry" next_entry_displacement="0"/>
      <!-- free list -->
      <field type="port_message_queue_entry" next_entry_displacement="32"/>
      <field type="port_message_queue_entry" next_entry_displacement="40"/>
      <field type="port_message_queue_entry" next_entry_displacement="48"/>
      <field type="port_message_queue_entry" next_entry_displacement="56"/>
      <field type="port_message_queue_entry" next_entry_displacement="0"/>
    </field>
  </segment>

  <segment name="normal_dispatch_port_access_segment" type="port_access_segment" size="64" object_table="dispatch_port_object_table">
    <ad index="port_data_segment" segment="normal_dispatch_port_data_segment"/>
    <ad index="4"                segment="process_1_process_access_segment"/>
  </segment>

  <segment name="alarm_dispatch_port_data_segment" type="port_data_segment" object_table="dispatch_port_object_table">
    <field name="head_free_buffer" value="16"/>
    <field name="head_message_in_buffer" value="0"/>
    <field name="tail_message_in_buffer" value="0"/>
    <field name="port_message_queue">
      <!-- free list -->
      <field type="port_message_queue_entry" next_entry_displacement="24"/>
      <field type="port_message_queue_entry" next_entry_displacement="32"/>
      <field type="port_message_queue_entry" next_entry_displacement="40"/>
      <field type="port_message_queue_entry" next_entry_displacement="48"/>
      <field type="port_message_queue_entry" next_entry_displacement="56"/>
      <field type="port_message_queue_entry" next_entry_displacement="0"/>
    </field>
  </segment>

  <segment name="alarm_dispatch_port_access_segment" type="port_access_segment" size="64" object_table="dispatch_port_object_table">
    <ad index="port_data_segment" segment="alarm_dispatch_port_data_segment"/>
  </segment>

  <segment name="reconfiguration_dispatch_port_data_segment" type="port_data_segment" object_table="dispatch_port_object_table">
    <field name="head_free_buffer" value="16"/>
    <field name="head_message_in_buffer" value="0"/>
    <field name="tail_message_in_buffer" value="0"/>
    <field name="port_message_queue">
      <!-- free list -->
      <field type="port_message_queue_entry" next_entry_displacement="24"/>
      <field type="port_message_queue_entry" next_entry_displacement="32"/>
      <field type="port_message_queue_entry" next_entry_displacement="40"/>
      <field type="port_message_queue_entry" next_entry_displacement="48"/>
      <field type="port_message_queue_entry" next_entry_displacement="56"/>
      <field type="port_message_queue_entry" next_entry_displacement="0"/>
    </field>
  </segment>

  <segment name="reconfiguration_dispatch_port_access_segment" type="port_access_segment" size="64" object_table="dispatch_port_object_table">
    <ad index="port_data_segment" segment="reconfiguration_dispatch_port_data_segment"/>
  </segment>

  <segment name="diagnostic_dispatch_port_data_segment" type="port_data_segment" object_table="dispatch_port_object_table">
    <field name="head_free_buffer" value="16"/>
    <field name="head_message_in_buffer" value="0"/>
    <field name="tail_message_in_buffer" value="0"/>
    <field name="port_message_queue">
      <!-- free list -->
      <field type="port_message_queue_entry" next_entry_displacement="24"/>
      <field type="port_message_queue_entry" next_entry_displacement="32"/>
      <field type="port_message_queue_entry" next_entry_displacement="40"/>
      <field type="port_message_queue_entry" next_entry_displacement="48"/>
      <field type="port_message_queue_entry" next_entry_displacement="56"/>
      <field type="port_message_queue_entry" next_entry_displacement="0"/>
    </field>
  </segment>

  <segment name="diagnostic_dispatch_port_access_segment" type="port_access_segment" size="64" object_table="dispatch_port_object_table">
    <ad index="port_data_segment" segment="diagnostic_dispatch_port_data_segment"/>
  </segment>

  <segment name="scheduling_port_data_segment" type="port_data_segment" object_table="system_object_table">
    <field name="head_free_buffer" value="24"/>
    <field name="head_message_in_buffer" value="16"/>
    <field name="tail_message_in_buffer" value="16"/>
    <field name="port_message_queue">
      <!-- in use -->
      <field type="port_message_queue_entry" next_entry_displacement="0"/>
      <!-- free list -->
      <field type="port_message_queue_entry" next_entry_displacement="32"/>
      <field type="port_message_queue_entry" next_entry_displacement="40"/>
      <field type="port_message_queue_entry" next_entry_displacement="48"/>
      <field type="port_message_queue_entry" next_entry_displacement="56"/>
      <field type="port_message_queue_entry" next_entry_displacement="0"/>
    </field>
  </segment>

  <segment name="scheduling_port_access_segment" type="port_access_segment" size="64" object_table="system_object_table">
    <ad index="port_data_segment" segment="scheduling_port_data_segment"/>
  </segment>

  <segment name="fault_port_data_segment" type="port_data_segment" object_table="system_object_table">
    <field name="head_free_buffer" value="16"/>
    <field name="head_message_in_buffer" value="0"/>
    <field name="tail_message_in_buffer" value="0"/>
    <field name="port_message_queue">
      <!-- free list -->
      <field type="port_message_queue_entry" next_entry_displacement="24"/>
      <field type="port_message_queue_entry" next_entry_displacement="32"/>
      <field type="port_message_queue_entry" next_entry_displacement="40"/>
      <field type="port_message_queue_entry" next_entry_displacement="48"/>
      <field type="port_message_queue_entry" next_entry_displacement="56"/>
      <field type="port_message_queue_entry" next_entry_displacement="0"/>
    </field>
  </segment>

  <segment name="fault_port_access_segment" type="port_access_segment" size="64" object_table="system_object_table">
    <ad index="port_data_segment" segment="fault_port_data_segment"/>
  </segment>

  <segment name="delay_port_data_segment" type="port_data_segment" object_table="system_object_table">
    <field name="head_free_buffer" value="16"/>
    <field name="head_message_in_buffer" value="0"/>
    <field name="tail_message_in_buffer" value="0"/>
    <field name="port_message_queue">
      <!-- free list -->
      <field type="port_message_queue_entry" next_entry_displacement="24"/>
      <field type="port_message_queue_entry" next_entry_displacement="32"/>
      <field type="port_message_queue_entry" next_entry_displacement="40"/>
      <field type="port_message_queue_entry" next_entry_displacement="48"/>
      <field type="port_message_queue_entry" next_entry_displacement="56"/>
      <field type="port_message_queue_entry" next_entry_displacement="0"/>
    </field>
  </segment>

  <segment name="delay_port_access_segment" type="port_access_segment" size="64" object_table="system_object_table">
    <ad index="port_data_segment" segment="delay_port_data_segment"/>
  </segment>

  <segment name="processor_1_local_communication_data_segment" type="communication_data_segment" object_table="processor_1_object_table">
    <field name="processor_count" value="1"/>
    <field name="processor_id"    value="1"/>
  </segment>

  <segment name="processor_1_processor_data_segment" type="processor_data_segment" object_table="processor_1_object_table">
  </segment>

  <segment name="processor_1_processor_access_segment" type="processor_access_segment" object_table ="processor_table" seg_index="1">
    <ad index="processor_data_segment"       segment="processor_1_processor_data_segment"/>
    <ad index="current_process_carrier"/> <!-- no current process -->
    <ad index="local_communication_segment"  segment="processor_1_local_communication_data_segment"/>
    <ad index="global_communication_segment" segment="global_communication_data_segment"/>
    <ad index="object_table_directory"       segment="object_table_directory"/>
    <ad index="processor_carrier"            segment="processor_1_normal_port_processor_carrier_access_segment"/>
    <ad index="delay_port"                   segment="delay_port_access_segment"/>
    <ad index="delay_carrier"                segment="delay_carrier_access_segment"/> <!-- XXX unclear how delay_carrier is used -->
    <ad index="normal_port"                  segment="normal_dispatch_port_access_segment"/>
    <ad index="normal_port_carrier"          segment="processor_1_normal_port_processor_carrier_access_segment"/>
    <ad index="alarm_port"                   segment="alarm_dispatch_port_access_segment"/>
    <ad index="alarm_port_carrier"           segment="processor_1_alarm_port_processor_carrier_access_segment"/>
    <ad index="reconfiguration_port"         segment="reconfiguration_dispatch_port_access_segment"/>
    <ad index="reconfiguration_port_carrier" segment="processor_1_reconfiguration_port_processor_carrier_access_segment"/>
    <ad index="diagnostic_port"              segment="diagnostic_dispatch_port_access_segment"/>
    <ad index="diagnostic_port_carrier"      segment="processor_1_reconfiguration_port_processor_carrier_access_segment"/>
  </segment>

  <segment name="processor_1_normal_port_processor_carrier_data_segment" type="carrier_data_segment" object_table="processor_1_object_table">
    <field name="carrier_status">
      <field name="carried_object_type" value="processor"/>
    </field>
  </segment>

  <segment name="processor_1_normal_port_processor_carrier_access_segment" type="carrier_access_segment" object_table="processor_1_object_table">
    <ad index="carrier_data_segment" segment="processor_1_normal_port_processor_carrier_data_segment"/>
    <ad index="carried_object"       segment="processor_1_processor_access_segment"/>
  </segment>

  <segment name="processor_1_alarm_port_processor_carrier_data_segment" type="carrier_data_segment" object_table="processor_1_object_table">
    <field name="carrier_status">
      <field name="carried_object_type" value="processor"/>
    </field>
  </segment>

  <segment name="processor_1_alarm_port_processor_carrier_access_segment" type="carrier_access_segment" object_table="processor_1_object_table">
    <ad index="carrier_data_segment" segment="processor_1_alarm_port_processor_carrier_data_segment"/>
    <ad index="carried_object"       segment="processor_1_processor_access_segment"/>
  </segment>

  <segment name="processor_1_diagnostic_port_processor_carrier_data_segment" type="carrier_data_segment" object_table="processor_1_object_table">
    <field name="carrier_status">
      <field name="carried_object_type" value="processor"/>
    </field>
  </segment>

  <segment name="processor_1_diagnostic_port_processor_carrier_access_segment" type="carrier_access_segment" object_table="processor_1_object_table">
    <ad index="carrier_data_segment" segment="processor_1_diagnostic_port_processor_carrier_data_segment"/>
    <ad index="carried_object"       segment="processor_1_processor_access_segment"/>
  </segment>

  <segment name="processor_1_reconfiguration_port_processor_carrier_data_segment" type="carrier_data_segment" object_table="processor_1_object_table">
    <field name="carrier_status">
      <field name="carried_object_type" value="processor"/>
    </field>
  </segment>

  <segment name="processor_1_reconfiguration_port_processor_carrier_access_segment" type="carrier_access_segment" object_table="processor_1_object_table">
    <ad index="carrier_data_segment" segment="processor_1_reconfiguration_port_processor_carrier_data_segment"/>
    <ad index="carried_object"       segment="processor_1_processor_access_segment"/>
  </segment>

  <segment name="delay_carrier_access_segment" type="carrier_access_segment" object_table="process_1_object_table">
    <!-- XXX probably should be associated with the process -->
    <ad index="carrier_data_segment"/>
    <ad index="carried_object"/>
  </segment>

  <segment name="process_1_process_data_segment" type="process_data_segment" object_table="process_1_object_table">
  </segment>

  <segment name="process_1_process_access_segment" type="process_access_segment" object_table="process_1_object_table">
    <ad index="process_data_segment" segment="process_1_process_data_segment"/>
    <ad index="current_context" segment="process_1_root_context_access_segment"/>
    <ad index="global_access_segment" segment="process_1_global_access_segment"/>
    <ad index="local_object_table" segment="process_1_object_table"/>
    <ad index="process_carrier" segment="process_1_process_carrier_access_segment"/>
    <ad index="dispatching_port" segment="normal_dispatch_port_access_segment"/>

    <ad index="scheduling_port" segment="scheduling_port_access_segment"/>
    <!-- XXX There isn't currently anything to receive from the
         scheduling port. Ideally there would be a scheduling process
         that receives a process from that port, and sets the period
         count back to a large number, and sends it back to the
         scheduling port. The scheduling process should reset its own
         period count every time it does that. -->

    <ad index="fault_port" segment="fault_port_access_segment"/>
    <!-- XXX we don't have anything to receive from the fault port,
         but if the process faults we want it sent there anyhow, for
         post-mortem analysis of a memory dump -->

  </segment>

  <segment name="process_1_process_carrier_data_segment" type="carrier_data_segment" object_table="process_1_object_table">
  </segment>

  <segment name="process_1_process_carrier_access_segment" type="carrier_access_segment" object_table="process_1_object_table">
    <ad index="carrier_data_segment" segment="process_1_process_carrier_data_segment"/>
  </segment>

  <segment name="process_1_root_operand_stack_data_segment" type="generic_data_segment" size="8192" object_table="process_1_object_table"/>

  <segment name="process_1_root_constants_data_segment" type="generic_data_segment" object_table="process_1_object_table">
    <field name="uart_object_selector" type="object_selector" value="uart_segment"/>
    <field name="uart_data_register_displacement" type="ordinal" value="0"/>
    <field name="uart_control_status_register_displacement" type="ordinal" value="1"/>
    <field name="uart_tx_ready_mask" type="character" value="0x01"/>
    <field name="uart_reset_byte" type="character" value="0x40"/>
    <field name="uart_mode_byte" type="character" value="0x4e"/> <!-- async, 16x clock, 8N1 -->
    <field name="uart_command_byte" type="character" value="0x27"/> <!-- RTS, error reaset, RxEN, DTR, TxEN -->
    <field name="first" type="short_ordinal" value="0x41"/>
    <field name="last"  type="short_ordinal" value="0x5a"/>
  </segment>

  <segment name="process_1_global_access_segment" type="generic_access_segment" object_table="process_1_object_table">
    <!-- The global SRO has to be accessible from somewhere, the process
	 global access segment seems as good a place as any. -->
    <ad index="0" segment="global_sro_access_segment"/>
  </segment>

  <segment name="process_1_root_context_data_segment" type="context_data_segment" object_table="process_1_object_table">
    <field name="c" type="short_ordinal" value="0"/>
  </segment>

  <segment name="process_1_root_context_access_segment" type="context_access_segment" object_table="process_1_object_table">
    <ad index="context_data_segment"   segment="process_1_root_context_data_segment"/>
    <ad index="constants_data_segment" segment="process_1_root_constants_data_segment"/>
    <!-- XXX null AD for previous context, not going to return -->
    <!-- XXX null AD for message object -->
    <ad index="current_context"        segment="process_1_root_context_access_segment"/>
    <!-- XXX null ADs for entry access segments 1..3 -->
    <ad index="domain_of_definition"   segment="program_1_root_domain_access_segment"/>
    <ad index="operand_stack"          segment="process_1_root_operand_stack_data_segment"/>
  </segment>

  <segment name="null_program_instruction_data_segment" type="instruction_data_segment" object_table="null_program_object_table">
    <field name="context_access_segment_length" value="12"/>
    <field name="context_data_segment_length" value="8"/>
    <field name="operand_stack_segment_length" value="32"/>
    <field name="initial_instruction_displacement" value="start"/>
    <field name="data_constants_segment_index" value="1"/>
    <code>
      <label name="start"/>
      <instruction op="branch" format="">
	<bref target="start"/>
      </instruction>
    </code>
  </segment>

  <segment name="null_program_domain_access_segment" type="domain_access_segment" object_table="null_program_object_table">
    <ad index="0" segment="null_program_instruction_data_segment"/>
  </segment>

  <segment name="program_1_root_instruction_data_segment" type="instruction_data_segment" object_table="program_1_object_table">
    <field name="context_access_segment_length" value="12"/>
    <field name="context_data_segment_length" value="8"/>
    <field name="operand_stack_segment_length" value="32"/>
    <field name="initial_instruction_displacement" value="init"/>
    <field name="data_constants_segment_index" value="1"/>
    <code>
      <label name="init"/>

      <assume eas="0" segment="process_1_root_context_data_segment"/>

      <!-- XXX need an instruction to enter the process_1_root_constants_data_segment as eas 1 -->
      <assume eas="1" segment="process_1_root_constants_data_segment"/>

      <instruction op="move_character" format="ref1,stk">
	<dref segment="process_1_root_constants_data_segment" offset="first"/>
	<dref segment="process_1_root_constants_data_segment" offset="uart_reset_byte"/>
      </instruction>

      <instruction op="convert_character_to_short_ordinal" format="ref1,stk">
	<dref segment="process_1_root_context_data_segment" offset="c"/>
      </instruction>

      <instruction op="move_to_interconnect" format="ref1,ref2,stk">
	<dref segment="process_1_root_constants_data_segment" offset="uart_object_selector"/>
	<dref segment="process_1_root_constants_data_segment" offset="uart_data_register_displacement"/>
      </instruction>

      <instruction op="move_character" format="ref1,stk">
	<dref segment="process_1_root_constants_data_segment" offset="first"/>
	<dref segment="process_1_root_constants_data_segment" offset="uart_mode_byte"/>
      </instruction>

      <instruction op="convert_character_to_short_ordinal" format="ref1,stk">
	<dref segment="process_1_root_context_data_segment" offset="c"/>
      </instruction>

      <instruction op="move_to_interconnect" format="ref1,ref2,stk">
	<dref segment="process_1_root_constants_data_segment" offset="uart_object_selector"/>
	<dref segment="process_1_root_constants_data_segment" offset="uart_data_register_displacement"/>
      </instruction>

      <instruction op="move_character" format="ref1,stk">
	<dref segment="process_1_root_constants_data_segment" offset="first"/>
	<dref segment="process_1_root_constants_data_segment" offset="uart_command_byte"/>
      </instruction>

      <instruction op="convert_character_to_short_ordinal" format="ref1,stk">
	<dref segment="process_1_root_context_data_segment" offset="c"/>
      </instruction>

      <instruction op="move_to_interconnect" format="ref1,ref2,stk">
	<dref segment="process_1_root_constants_data_segment" offset="uart_object_selector"/>
	<dref segment="process_1_root_constants_data_segment" offset="uart_data_register_displacement"/>
      </instruction>

      <label name="start"/>

      <instruction op="move_character" format="ref1,ref2">
	<dref segment="process_1_root_constants_data_segment" offset="first"/>
	<dref segment="process_1_root_context_data_segment" offset="c"/>
      </instruction>

      <label name="loop"/>

      <instruction op="move_from_interconnect" format="ref1,ref2,stk">
	<dref segment="process_1_root_constants_data_segment" offset="uart_object_selector"/>
	<dref segment="process_1_root_constants_data_segment" offset="uart_control_status_register_displacement"/>
      </instruction>

      <instruction op="convert_short_ordinal_to_character" format="stk,stk"/>

      <instruction op="and_character" format="stk,ref1,stk">
	<dref segment="process_1_root_constants_data_segment" offset="uart_tx_ready_mask"/>
      </instruction>

      <instruction op="branch_false" format="br">
	<bref target="loop"/>
      </instruction>

      <instruction op="convert_character_to_short_ordinal" format="ref1,stk">
	<dref segment="process_1_root_context_data_segment" offset="c"/>
      </instruction>

      <instruction op="move_to_interconnect" format="ref1,ref2,stk">
	<dref segment="process_1_root_constants_data_segment" offset="uart_object_selector"/>
	<dref segment="process_1_root_constants_data_segment" offset="uart_data_register_displacement"/>
      </instruction>

      <instruction op="increment_character" format="ref1">
	<dref segment="process_1_root_context_data_segment" offset="c"/>
      </instruction>

      <instruction op="greater_than_character_character" format="ref1,ref2,stk">
	<dref segment="process_1_root_context_data_segment" offset="c"/>
	<dref segment="process_1_root_constants_data_segment" offset="last"/>
      </instruction>

      <instruction op="branch_false" format="stk,br">
	<bref target="loop"/>
      </instruction>

      <instruction op="branch" format="br">
	<bref target="start"/>
      </instruction>
    </code>
  </segment>

  <segment name="program_1_root_fault_instruction_data_segment" type="instruction_data_segment" object_table="program_1_object_table">
    <field name="context_access_segment_length" value="12"/>
    <field name="context_data_segment_length" value="8"/>
    <field name="operand_stack_segment_length" value="32"/>
    <field name="initial_instruction_displacement" value="init"/>
    <field name="data_constants_segment_index" value="1"/>
    <code>
      <label name="init"/>
      <!-- No actual fault handling. Loop doing nothing, to preserve state
           for post-mortem analysis. -->
      <instruction op="branch" format="br">
	<bref target="init"/>
      </instruction>
    </code>
  </segment>

  <segment name="program_1_root_domain_access_segment" type="domain_access_segment" object_table="program_1_object_table">
    <ad index="0" segment="program_1_root_instruction_data_segment"/>
    <ad index="1" segment="program_1_root_fault_instruction_data_segment"/>
  </segment>

</image>
